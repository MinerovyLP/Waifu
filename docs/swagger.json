{
    "swagger": "2.0",
    "info": {
        "description": "WAIFU.IM is an easy to use API that allows you to get waifu pictures from an archive of over 4000 images and multiple tags!\n\n## Versioning\n\nYou can specify which version of the API you want to use by placing it in the `Accept-Version` header.\n\nIf the value doesn't match any version, the latest version is used.\n\nWe highly recommend using versioning to prevent your app from breaking if a new version with breaking changes is developed. You can check which version you are using in the `Version` response header.\n\nThe latest version of the API is `v5`.\n\n## Breaking Changes\n\n- `FAVOURITES` became `FAVORITES`.\n\n- `/fav/delete` and `/fav/insert` now return the same structure as `/fav/toggle` and return a `200` status code.\n\n- For more information, please join the Discord server or contact us by email.\n\n## Rate Limit\n\nNote: This rate limit only applies to the `api.waifu.im` domain.\n\nThe rate limit is **1** request every **200** milliseconds. If you exceed this limit, the request will be put in a queue (with a maximum size of **10**).\n\nIf the queue is full, the server will respond with a **429** status code.\n\nYou can check the `Retry-After` header to get the time to wait (in seconds) before making another request.\n\n## Resources\n\nHere are some useful resources related to the API:\n\n- [GitHub](https://github.com/Waifu-im)\n\n- [Python wrapper](https://github.com/Waifu-im/waifuim.py)\n\n- [C# wrapper](https://github.com/SoNearSonar/WaifuImAPI-NET)\n\n## Tags\n\nImages are classified by a tag system and can have multiple tags!\n\nThere are versatile tags that can describe both safe and lewd images, as well as NSFW tags that only describe lewd images.\n\nYou can get a list of all tags at the `/tags` endpoint.\n\n## Generate an Authorization Link\n\nThis part isn't directly related to the API, and the base URL is not the same.\n\nThis will allow you to generate a link asking a user to click on it and grant permissions over their Waifu.im account (you can also do the opposite with revoke).\n\nThis will be useful if you want to use the `user_id` query string when dealing with favorites.\n\n| URI                                        | Request type |\n|--------------------------------------------|--------------|\n| https://www.waifu.im/authorization/        | GET          |\n| https://www.waifu.im/authorization/revoke/ | GET          |\n\n### Query strings\n\n| Name        | Required | Type         | Behavior                                                                                                  |\n|-------------|----------|--------------|-----------------------------------------------------------------------------------------------------------|\n| user_id     | Yes      | Integer      | The Discord user ID of the user that will receive the permissions                                         |\n| permissions | Yes      | String Array | The permissions that will be asked for. Available permissions are `view_favorites` and `manage_favorites` |\n\nTo take in an array of values, provide the query string again with different values.\n\n\n## ⚠️ Warning\nIf you want to try routes that require authentication, you need to include your token. You can find your token at [https://www.waifu.im/dashboard](https://www.waifu.im/dashboard).\n\nTo include your token:\n\n1. Click the `Authorize` button below.\n\n2. In the dialog that appears, enter your token in the `Value` field.\n\n3. Click `Authorize` to apply the token.\n\n**Note:** When filling the field, ensure that you include the word `Bearer ` (with the space) before your token to properly authenticate your requests.",
        "title": "Waifu.im",
        "termsOfService": "https://www.waifu.im/terms-of-service",
        "contact": {
            "name": "Contact",
            "url": "http://www.waifu.im/contact",
            "email": "contact@waifu.im"
        },
        "license": {
            "name": "MPL 2.0",
            "url": "https://www.mozilla.org/en-US/MPL/2.0/"
        },
        "version": "5.2.2"
    },
    "host": "api.waifu.im",
    "basePath": "/",
    "paths": {
        "/fav": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves images based on the user's favorites.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Favorites"
                ],
                "summary": "Fetch Favorite Images",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Force the API to return images with at least all the provided tags",
                        "name": "included_tags",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Force the API to return images without any of the provided tags",
                        "name": "excluded_tags",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": "58e6f0372364abda",
                        "description": "Force the API to provide only the specified file IDs or signatures",
                        "name": "included_files",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": "8108",
                        "description": "Force the API to not list the specified file IDs or signatures",
                        "name": "excluded_files",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "null",
                            "true",
                            "false"
                        ],
                        "type": "string",
                        "default": "false",
                        "description": "Force or exclude lewd files (only works if included_tags only contain versatile tags and no nsfw only tag).  You  can  provide  'null'  to  make  it  be  random.",
                        "name": "is_nsfw",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Force or prevent the API to return .gif files",
                        "name": "gif",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "FAVORITES",
                            "UPLOADED_AT",
                            "LIKED_AT",
                            "RANDOM"
                        ],
                        "type": "string",
                        "default": "RANDOM",
                        "description": "Ordering criteria",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "LANDSCAPE",
                            "PORTRAIT",
                            "RANDOM"
                        ],
                        "type": "string",
                        "default": "RANDOM",
                        "description": "Image orientation",
                        "name": "orientation",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Return an array of 30 files if true",
                        "name": "many",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Returns the full result without any limit (admins only)",
                        "name": "full",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\u003e=2000",
                        "description": "Filter images by width (in pixels).                                   Accepted  operators:  \u003c=,  \u003e=,  \u003e,  \u003c,  !=,  =",
                        "name": "width",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\u003e=2000",
                        "description": "Filter images by height (in pixels).                                  Accepted  operators:  \u003c=,  \u003e=,  \u003e,  \u003c,  !=,  =",
                        "name": "height",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\u003e=2000",
                        "description": "Filter images by byte size. Accepted operators: \u003c=, \u003e=, \u003e, \u003c, !=, =",
                        "name": "byte_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/serializers.ImagesJsonResponse"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/serializers.JSONError"
                        }
                    }
                }
            }
        },
        "/fav/delete": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Removes an image from the user's favorites.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Favorites"
                ],
                "summary": "Delete an image from favorites",
                "parameters": [
                    {
                        "description": "Image data",
                        "name": "image",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/serializers.Image"
                        }
                    },
                    {
                        "description": "User ID",
                        "name": "user_id",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/serializers.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DELETED",
                        "schema": {
                            "$ref": "#/definitions/serializers.FavState"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/serializers.JSONError"
                        }
                    }
                }
            }
        },
        "/fav/insert": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Inserts an image to the user's favorites.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Favorites"
                ],
                "summary": "Insert an image to favorites",
                "parameters": [
                    {
                        "description": "Image data",
                        "name": "image",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/serializers.Image"
                        }
                    },
                    {
                        "description": "User ID",
                        "name": "user_id",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/serializers.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "INSERTED",
                        "schema": {
                            "$ref": "#/definitions/serializers.FavState"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/serializers.JSONError"
                        }
                    }
                }
            }
        },
        "/fav/toggle": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Toggles an image in the user's favorites.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Favorites"
                ],
                "summary": "Toggle an image in favorites",
                "parameters": [
                    {
                        "description": "Image data",
                        "name": "image",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/serializers.Image"
                        }
                    },
                    {
                        "description": "User ID",
                        "name": "user_id",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/serializers.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/serializers.FavState"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/serializers.JSONError"
                        }
                    }
                }
            }
        },
        "/report": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Report an image with a given image ID and description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Report"
                ],
                "summary": "Report an image",
                "parameters": [
                    {
                        "description": "Image Data",
                        "name": "image",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/serializers.ReportImage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the report information",
                        "schema": {
                            "$ref": "#/definitions/database.ReportRes"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/serializers.JSONError"
                        }
                    }
                }
            }
        },
        "/search": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves images randomly or by tag based on the specified search criteria.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Get Images"
                ],
                "summary": "Search Images",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Force the API to return images with at least all the provided tags",
                        "name": "included_tags",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Force the API to return images without any of the provided tags",
                        "name": "excluded_tags",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": "58e6f0372364abda",
                        "description": "Force the API to provide only the specified file IDs or signatures",
                        "name": "included_files",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": "8108",
                        "description": "Force the API to not list the specified file IDs or signatures",
                        "name": "excluded_files",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "null",
                            "true",
                            "false"
                        ],
                        "type": "string",
                        "default": "false",
                        "description": "Force or exclude lewd files (only works if included_tags only contain versatile tags and no nsfw only tag).  You  can  provide  'null'  to  make  it  be  random.",
                        "name": "is_nsfw",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Force or prevent the API to return .gif files",
                        "name": "gif",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "FAVORITES",
                            "UPLOADED_AT",
                            "LIKED_AT",
                            "RANDOM"
                        ],
                        "type": "string",
                        "default": "RANDOM",
                        "description": "Ordering criteria",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "LANDSCAPE",
                            "PORTRAIT",
                            "RANDOM"
                        ],
                        "type": "string",
                        "default": "RANDOM",
                        "description": "Image orientation",
                        "name": "orientation",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Return an array of 30 files if true",
                        "name": "many",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Returns the full result without any limit (admins only)",
                        "name": "full",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\u003e=2000",
                        "description": "Filter images by width (in pixels).                                   Accepted  operators:  \u003c=,  \u003e=,  \u003e,  \u003c,  !=,  =",
                        "name": "width",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\u003e=2000",
                        "description": "Filter images by height (in pixels).                                  Accepted  operators:  \u003c=,  \u003e=,  \u003e,  \u003c,  !=,  =",
                        "name": "height",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\u003e=2000",
                        "description": "Filter images by byte size. Accepted operators: \u003c=, \u003e=, \u003e, \u003c, !=, =",
                        "name": "byte_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/serializers.ImagesJsonResponse"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/serializers.JSONError"
                        }
                    }
                }
            }
        },
        "/tags": {
            "get": {
                "description": "Get a list of tags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Get tags",
                "parameters": [
                    {
                        "type": "boolean",
                        "default": false,
                        "example": true,
                        "description": "Returns more information about the tags, such as a description.",
                        "name": "full",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/serializers.TagsJsonResponse"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/serializers.JSONError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "database.ReportRes": {
            "type": "object",
            "properties": {
                "author_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "existed": {
                    "type": "boolean"
                },
                "image_id": {
                    "type": "integer"
                }
            }
        },
        "models.Artist": {
            "type": "object",
            "properties": {
                "artist_id": {
                    "type": "integer",
                    "example": 1
                },
                "deviant_art": {
                    "type": "string",
                    "example": "https://www.deviantart.com/4thwallzart"
                },
                "name": {
                    "type": "string",
                    "example": "fourthwallzart"
                },
                "patreon": {
                    "type": "string"
                },
                "pixiv": {
                    "type": "string"
                },
                "twitter": {
                    "type": "string",
                    "example": "https://twitter.com/4thWallzArt"
                }
            }
        },
        "models.Image": {
            "type": "object",
            "properties": {
                "artist": {
                    "$ref": "#/definitions/models.Artist"
                },
                "byte_size": {
                    "type": "integer",
                    "example": 3299586
                },
                "dominant_color": {
                    "type": "string",
                    "example": "#bbb7b2"
                },
                "extension": {
                    "type": "string",
                    "example": ".png"
                },
                "favorites": {
                    "type": "integer",
                    "example": 1
                },
                "height": {
                    "type": "integer",
                    "example": 2304
                },
                "image_id": {
                    "type": "integer",
                    "example": 8108
                },
                "is_nsfw": {
                    "type": "boolean",
                    "example": false
                },
                "liked_at": {
                    "type": "string"
                },
                "preview_url": {
                    "type": "string",
                    "example": "https://www.waifu.im/preview/8108/"
                },
                "signature": {
                    "type": "string",
                    "example": "58e6f0372364abda"
                },
                "source": {
                    "type": "string",
                    "example": "https://www.patreon.com/posts/persephone-78224476"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Tag"
                    }
                },
                "uploaded_at": {
                    "type": "string",
                    "example": "2023-05-03T18:40:04.381354+02:00"
                },
                "url": {
                    "type": "string",
                    "example": "https://cdn.waifu.im/8108.png"
                },
                "width": {
                    "type": "integer",
                    "example": 1536
                }
            }
        },
        "models.Tag": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "A female anime/manga character."
                },
                "is_nsfw": {
                    "type": "boolean",
                    "example": false
                },
                "name": {
                    "type": "string",
                    "example": "waifu"
                },
                "tag_id": {
                    "type": "integer",
                    "example": 12
                }
            }
        },
        "serializers.FavState": {
            "type": "object",
            "properties": {
                "state": {
                    "type": "string",
                    "example": "INSERT"
                }
            }
        },
        "serializers.Image": {
            "type": "object",
            "properties": {
                "image_id": {
                    "type": "integer"
                }
            }
        },
        "serializers.ImagesJsonResponse": {
            "type": "object",
            "properties": {
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Image"
                    }
                }
            }
        },
        "serializers.JSONError": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                }
            }
        },
        "serializers.ReportImage": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 200,
                    "example": "Here is a less than 200 characters and optional description"
                },
                "image_id": {
                    "type": "integer"
                }
            }
        },
        "serializers.TagsJsonResponse": {
            "type": "object",
            "properties": {
                "nsfw": {
                    "type": "array",
                    "items": {}
                },
                "versatile": {
                    "type": "array",
                    "items": {}
                }
            }
        },
        "serializers.User": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}